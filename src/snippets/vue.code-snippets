{
  "404 路由页面": {
    "body": [
      "{",
      "\tpath: '/:pathMatch(.*)*',",
      "\tname: 'NotFound',",
      "\tcomponent: NotFound",
      "}"
    ],
    "prefix": "notfound"
  },
  "template": {
    "prefix": "temp",
    "body": ["<template>", "${1}", "</template>"],
    "description": "template"
  },
  "vue3-ts-setup": {
    "prefix": "vbasets",
    "body": [
      "<template>",
      "  <div>init</div>",
      "</template>",
      "",
      "<script lang='ts' setup>",
      "import { ref } from 'vue'",
      "",
      "</script>",
      "",
      "<style lang='scss' scoped></style>",
      ""
    ],
    "description": "vue3-ts-setup"
  },
  "vue3-setup": {
    "prefix": "vbase",
    "body": [
      "<template>",
      "  <div>init</div>",
      "</template>",
      "",
      "<script setup>",
      "import { ref } from 'vue'",
      "",
      "</script>",
      "",
      "<style lang='scss' scoped></style>",
      ""
    ],
    "description": "vue3-setup"
  },
  "vue-template": {
    "prefix": "vbaseop",
    "body": [
      "<template>",
      "\t<div>",
      "",
      "\t</div>",
      "</template>",
      "",
      "<script>",
      "\texport default {",
      "\t\tdata(){",
      "\t\t\treturn {}",
      "\t\t}",
      "\t}",
      "</script>",
      "",
      "<style lang=\"scss\" scoped>",
      "",
      "</style>"
    ],
    "description": "Vue Component Template"
  },
  "Vue Element-Plus CRUD": {
    "prefix": "epcrud",
    "body": [
      "<template> ",
      "\t <el-button type=\"primary\" @click=\"openAddDialog\">添加</el-button> ",
      "",
      "\t <!-- 用户列表 --> ",
      "\t <el-table v-loading=\"loading\" :data=\"tableData\" style=\"width: 100%\" border stripe> ",
      "\t\t <el-table-column prop=\"id\" label=\"ID\" width=\"80\" /> ",
      "\t\t <el-table-column prop=\"username\" label=\"用户名\" /> ",
      "\t\t <el-table-column prop=\"email\" label=\"邮箱\" /> ",
      "\t\t <el-table-column label=\"操作\" width=\"140px\" align=\"center\" fixed=\"right\"> ",
      "\t\t\t <template #default=\"{ row }\"> ",
      "\t\t\t\t <el-button size=\"small\" type=\"primary\" @click=\"openEditDialog(row)\"> ",
      "\t\t\t\t\t 编辑 ",
      "\t\t\t\t </el-button> ",
      "\t\t\t\t <el-button size=\"small\" type=\"danger\" @click=\"handleDelete(row)\">删除</el-button> ",
      "\t\t\t </template> ",
      "\t\t </el-table-column> ",
      "\t </el-table> ",
      "",
      "\t <el-dialog v-model=\"dialogParam.visible\" :title=\"dialogParam.title\" width=\"650px\"> ",
      "\t\t <el-form ref=\"formRef\" :model=\"form\" :rules=\"rules\" label-width=\"80px\"> ",
      "\t\t\t <el-form-item label=\"用户名\" prop=\"username\"> ",
      "\t\t\t\t <el-input v-model=\"form.username\" placeholder=\"请输入用户名\" /> ",
      "\t\t\t </el-form-item> ",
      "\t\t\t <el-form-item label=\"邮箱\" prop=\"email\"> ",
      "\t\t\t\t <el-input v-model=\"form.email\" placeholder=\"请输入邮箱\" /> ",
      "\t\t\t </el-form-item> ",
      "\t\t </el-form> ",
      "\t\t <template #footer> ",
      "\t\t\t <div style=\"display: flex; justify-content: flex-end\"> ",
      "\t\t\t\t <el-button @click=\"handleCancel\">取消</el-button> ",
      "\t\t\t\t <el-button type=\"primary\" @click=\"submitForm\"> ",
      "\t\t\t\t\t {{ dialogParam.type === 'edit' ? '更新' : '添加' }} ",
      "\t\t\t\t </el-button> ",
      "\t\t\t </div> ",
      "\t\t </template> ",
      "\t </el-dialog> ",
      "</template> ",
      "",
      "<script setup> ",
      "import { reactive, ref, onMounted } from 'vue' ",
      "import { ElMessage, ElMessageBox } from 'element-plus' ",
      "",
      "const tableData = ref([]) ",
      "const loading = ref(false) ",
      "const dialogParam = ref({ ",
      "\t visible: false, ",
      "\t type: 'add', ",
      "\t title: '添加用户' ",
      "}) ",
      "const currentData = ref({}) ",
      "const formRef = ref(null) ",
      "const form = reactive({ ",
      "\t username: '', ",
      "\t email: '' ",
      "}) ",
      "",
      "// 表单校验规则 ",
      "const rules = reactive({ ",
      "\t username: [ ",
      "\t\t { required: true, message: '请输入用户名', trigger: 'blur' }, ",
      "\t\t { min: 2, max: 20, message: '用户名长度应为2-20个字符', trigger: 'blur' } ",
      "\t ], ",
      "\t email: [ ",
      "\t\t { required: true, message: '请输入邮箱地址', trigger: 'blur' }, ",
      "\t\t { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' } ",
      "\t ] ",
      "}) ",
      "",
      "onMounted(() => { ",
      "\t getDataList() ",
      "}) ",
      "",
      "const getDataList = async () => { ",
      "\t loading.value = true ",
      "\t setTimeout(() => { ",
      "\t\t tableData.value = [ ",
      "\t\t\t { id: 1, username: '张三', email: 'zhangsan@example.com' }, ",
      "\t\t\t { id: 2, username: '李四', email: 'lisi@example.com' }, ",
      "\t\t\t { id: 3, username: '王五', email: 'wangwu@example.com' } ",
      "\t\t ] ",
      "\t\t loading.value = false ",
      "\t }, 500) ",
      "} ",
      "const openAddDialog = () => { ",
      "\t dialogParam.value = { visible: true, type: 'add', title: '添加' } ",
      "\t resetForm() ",
      "} ",
      "const openEditDialog = (user) => { ",
      "\t dialogParam.value = { visible: true, type: 'edit', title: '编辑' } ",
      "\t resetForm() ",
      "\t currentData.value = { ...user } ",
      "\t form.username = user.username ",
      "\t form.email = user.email ",
      "} ",
      "",
      "// 处理删除用户 ",
      "const handleDelete = (row) => { ",
      "\t ElMessageBox.confirm('确定要删除吗？', '提示', { ",
      "\t\t confirmButtonText: '确定', ",
      "\t\t cancelButtonText: '取消', ",
      "\t\t type: 'warning' ",
      "\t }) ",
      "\t\t .then(() => { ",
      "\t\t\t console.log('handlerDelete') ",
      "\t\t }) ",
      "\t\t .catch(() => { ",
      "\t\t\t console.log('cancel') ",
      "\t\t }) ",
      "} ",
      "const handleCancel = async () => {",
      "\t resetForm()",
      "\t dialogParam.value.visible = false ",
      "}",
      "// 提交表单 ",
      "const submitForm = async () => { ",
      "\t formRef.value?.validate(async (valid) => { ",
      "\t\t if (valid) { ",
      "\t\t\t if (dialogParam.value.type === 'edit') { ",
      "\t\t\t\t console.log('edit') ",
      "\t\t\t } else { ",
      "\t\t\t\t console.log('add') ",
      "\t\t\t } ",
      "\t\t\t dialogParam.value.visible = false ",
      "\t\t } ",
      "\t }) ",
      "} ",
      "// 重置表单 ",
      "const resetForm = () => { ",
      "\t form.username = '' ",
      "\t form.email = '' ",
      "\t currentData.value = {} ",
      "\t formRef.value?.resetFields() ",
      "} ",
      "</script> ",
      "",
      "<style lang=\"scss\" scoped></style>"
    ],
    "description": "Vue Element-Plus Table with Dialog for User Management"
  }
}
